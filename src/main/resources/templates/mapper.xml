<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ruoyi.project.exceptSolve.medicate.mapper.MedicateExceptSolveMapper">
    <resultMap id="MedicateExceptResult" type="MedicateExcept">
        <result property="time" column="time"></result>
        <result property="medicateLevel"    column="medicate_level"    />
        <result property="flowmeter"    column="flowmeter"    />
        <result property="reactionLevel"    column="reaction_level"    />
        <result property="reactionTurbidity"    column="reaction_turbidity"    />
    </resultMap>


    <select id="selectMedicateExceptSolveList" parameterType="MedicateExceptSolve" resultMap="MedicateExceptSolveResult">
        select * from medicate_except_solve
        <where>
            <if test="params.beginTime != null and params.beginTime != '' and params.endTime != null and params.endTime != ''"> and time between #{params.beginTime} and #{params.endTime}</if>
        </where>
    </select>

    <delete id="deleteMedicateExceptSolve">
delete from medicate_except_solve
    </delete>
    <select id="selectMedicateExcept" resultMap="MedicateExceptResult">
select * from medicate_except
    </select>
    <insert id="insertMedicateExceptSolve" parameterType="MedicateExceptSolve">
insert into medicate_except_solve values (#{time},#{solve})
    </insert>

    <!--    下面这条就是查询其中的故障对应的解决措施的  -->
    <select id="selectMethodByFaultId" parameterType="Long" resultType="java.lang.String">
        select method from method where fault_id=#{faultId}
    </select>

    <select id="selectMinStandardid1" resultType="Double">  <!-- 查 制药口液位允许最小值-->
        select min from standard where standard_id=1
    </select>
<!--
select标签表示的是查询操作，里面是查询语句。
id属性的值是SQL语句的唯一标识，是一个自定义的字符串。
按照编码规范，这里统一推荐使用dao接口中对应的方法名称。
resultType属性是表示执行SQL语句后，结果对应那个类型的JAVA对象。resultType的值是某个实体类的全限定名称。
比如：com.dcy.domain.Student
-->
    <select id="selectStudentById" resultType="com.dcy.domain.Student">
<!--select id,name,email,age from student where id=1001-->
select id,name,email,age from student where id=#{studentId}
    </select>
<!--    下面的语句使用了占位符，因为我们传过来的是一个java对象，可以直接使用它的属性名，放在花括号里面，
前面配上#，这就相当于是传参了-->
    <insert id="insertStudent">
        insert into student values (#{id},#{name},#{email},#{age})
    </insert>
<update id="updateUser" parameterType="User">
 		update sys_user
 		<set>
 			<if test="deptId != null and deptId != 0">dept_id = #{deptId},</if>
 			<if test="loginName != null and loginName != ''">login_name = #{loginName},</if>
 			<if test="userName != null and userName != ''">user_name = #{userName},</if>
 			<if test="userType != null and userType != ''">user_type = #{userType},</if>
 			<if test="email != null and email != ''">email = #{email},</if>
 			<if test="phonenumber != null and phonenumber != ''">phonenumber = #{phonenumber},</if>
 			<if test="sex != null and sex != ''">sex = #{sex},</if>
 			<if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
 			<if test="password != null and password != ''">password = #{password},</if>
 			<if test="salt != null and salt != ''">salt = #{salt},</if>
 			<if test="status != null and status != ''">status = #{status},</if>
 			<if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
 			<if test="loginDate != null">login_date = #{loginDate},</if>
 			<if test="pwdUpdateDate != null">pwd_update_date = #{pwdUpdateDate},</if>
 			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
 			<if test="remark != null">remark = #{remark},</if>
 			update_time = sysdate()
 		</set>
 		where user_id = #{userId}
	</update>
	<select id="selectDeptCount" parameterType="Dept" resultType="int">
		select count(1) from sys_dept
		where del_flag = '0'
		<if test="deptId != null and deptId != 0"> and dept_id = #{deptId} </if>
		<if test="parentId != null and parentId != 0"> and parent_id = #{parentId} </if>
	</select>
	<delete id="deleteUserRole" parameterType="Long">
 		delete from sys_user_role where user_id in
 		<foreach collection="array" item="userId" open="(" separator="," close=")">
 			#{userId}
                               </foreach> 
 	</delete>
</mapper>